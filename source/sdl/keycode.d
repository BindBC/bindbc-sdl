/+
+            Copyright 2024 â€“ 2025 Aya Partridge
+ Distributed under the Boost Software License, Version 1.0.
+     (See accompanying file LICENSE_1_0.txt or copy at
+           http://www.boost.org/LICENSE_1_0.txt)
+/
module sdl.keycode;

import bindbc.sdl.config, bindbc.sdl.codegen;

import sdl.scancode: SDL_Scancode;

enum{
	SDLK_ExtendedMask = 1U << 29,
	SDLK_ScancodeMask = 1U << 30,
	
	SDLK_EXTENDED_MASK = SDLK_ExtendedMask,
	SDLK_SCANCODE_MASK = SDLK_ScancodeMask,
}

alias SDL_KeyCode_ = uint;
mixin(makeEnumBind(q{SDL_KeyCode}, q{SDL_KeyCode_}, aliases: [q{SDLK}, q{SDL_Keycode}], members: (){
	EnumMember[] ret = [
		{{q{unknown},               q{SDLK_UNKNOWN}},               q{0x0000_0000U}},
		{{q{enter},                 q{SDLK_ENTER}},                 q{0x0000_000DU}, aliases: [{q{return_}, q{SDLK_RETURN}}]},
		{{q{escape},                q{SDLK_ESCAPE}},                q{0x0000_001BU}},
		{{q{backspace},             q{SDLK_BACKSPACE}},             q{0x0000_0008U}},
		{{q{tab},                   q{SDLK_TAB}},                   q{0x0000_0009U}},
		{{q{space},                 q{SDLK_SPACE}},                 q{0x0000_0020U}},
		{{q{exclaim},               q{SDLK_EXCLAIM}},               q{0x0000_0021U}, aliases: [{q{exclam}, q{SDLK_EXCLAM}}]},
		{{q{dblApostrophe},         q{SDLK_DBLAPOSTROPHE}},         q{0x0000_0022U}, aliases: [{q{doubleApostrophe}, q{SDLK_DOUBLEAPOSTROPHE}}]},
		{{q{hash},                  q{SDLK_HASH}},                  q{0x0000_0023U}},
		{{q{dollar},                q{SDLK_DOLLAR}},                q{0x0000_0024U}},
		{{q{percent},               q{SDLK_PERCENT}},               q{0x0000_0025U}},
		{{q{ampersand},             q{SDLK_AMPERSAND}},             q{0x0000_0026U}},
		{{q{apostrophe},            q{SDLK_APOSTROPHE}},            q{0x0000_0027U}},
		{{q{leftParen},             q{SDLK_LEFTPAREN}},             q{0x0000_0028U}},
		{{q{rightParen},            q{SDLK_RIGHTPAREN}},            q{0x0000_0029U}},
		{{q{asterisk},              q{SDLK_ASTERISK}},              q{0x0000_002AU}},
		{{q{plus},                  q{SDLK_PLUS}},                  q{0x0000_002BU}},
		{{q{comma},                 q{SDLK_COMMA}},                 q{0x0000_002CU}},
		{{q{hyphen},                q{SDLK_HYPHEN}},                q{0x0000_002DU}, aliases: [{q{minus}, q{SDLK_MINUS}}]},
		{{q{fullStop},              q{SDLK_FULLSTOP}},              q{0x0000_002EU}, aliases: [{q{period}, q{SDLK_PERIOD}}]},
		{{q{slash},                 q{SDLK_SLASH}},                 q{0x0000_002FU}},
		{{q{_0},                    q{SDLK_0}},                     q{0x0000_0030U}},
		{{q{_1},                    q{SDLK_1}},                     q{0x0000_0031U}},
		{{q{_2},                    q{SDLK_2}},                     q{0x0000_0032U}},
		{{q{_3},                    q{SDLK_3}},                     q{0x0000_0033U}},
		{{q{_4},                    q{SDLK_4}},                     q{0x0000_0034U}},
		{{q{_5},                    q{SDLK_5}},                     q{0x0000_0035U}},
		{{q{_6},                    q{SDLK_6}},                     q{0x0000_0036U}},
		{{q{_7},                    q{SDLK_7}},                     q{0x0000_0037U}},
		{{q{_8},                    q{SDLK_8}},                     q{0x0000_0038U}},
		{{q{_9},                    q{SDLK_9}},                     q{0x0000_0039U}},
		{{q{colon},                 q{SDLK_COLON}},                 q{0x0000_003AU}},
		{{q{semicolon},             q{SDLK_SEMICOLON}},             q{0x0000_003BU}},
		{{q{less},                  q{SDLK_LESS}},                  q{0x0000_003CU}},
		{{q{equals},                q{SDLK_EQUALS}},                q{0x0000_003DU}},
		{{q{greater},               q{SDLK_GREATER}},               q{0x0000_003EU}},
		{{q{question},              q{SDLK_QUESTION}},              q{0x0000_003FU}},
		{{q{at},                    q{SDLK_AT}},                    q{0x0000_0040U}},
		{{q{leftBracket},           q{SDLK_LEFTBRACKET}},           q{0x0000_005BU}},
		{{q{backslash},             q{SDLK_BACKSLASH}},             q{0x0000_005CU}},
		{{q{rightBracket},          q{SDLK_RIGHTBRACKET}},          q{0x0000_005DU}},
		{{q{caret},                 q{SDLK_CARET}},                 q{0x0000_005EU}},
		{{q{underscore},            q{SDLK_UNDERSCORE}},            q{0x0000_005FU}},
		{{q{grave},                 q{SDLK_GRAVE}},                 q{0x0000_0060U}},
		{{q{a},                     q{SDLK_A}},                     q{0x0000_0061U}},
		{{q{b},                     q{SDLK_B}},                     q{0x0000_0062U}},
		{{q{c},                     q{SDLK_C}},                     q{0x0000_0063U}},
		{{q{d},                     q{SDLK_D}},                     q{0x0000_0064U}},
		{{q{e},                     q{SDLK_E}},                     q{0x0000_0065U}},
		{{q{f},                     q{SDLK_F}},                     q{0x0000_0066U}},
		{{q{g},                     q{SDLK_G}},                     q{0x0000_0067U}},
		{{q{h},                     q{SDLK_H}},                     q{0x0000_0068U}},
		{{q{i},                     q{SDLK_I}},                     q{0x0000_0069U}},
		{{q{j},                     q{SDLK_J}},                     q{0x0000_006AU}},
		{{q{k},                     q{SDLK_K}},                     q{0x0000_006BU}},
		{{q{l},                     q{SDLK_L}},                     q{0x0000_006CU}},
		{{q{m},                     q{SDLK_M}},                     q{0x0000_006DU}},
		{{q{n},                     q{SDLK_N}},                     q{0x0000_006EU}},
		{{q{o},                     q{SDLK_O}},                     q{0x0000_006FU}},
		{{q{p},                     q{SDLK_P}},                     q{0x0000_0070U}},
		{{q{q},                     q{SDLK_Q}},                     q{0x0000_0071U}},
		{{q{r},                     q{SDLK_R}},                     q{0x0000_0072U}},
		{{q{s},                     q{SDLK_S}},                     q{0x0000_0073U}},
		{{q{t},                     q{SDLK_T}},                     q{0x0000_0074U}},
		{{q{u},                     q{SDLK_U}},                     q{0x0000_0075U}},
		{{q{v},                     q{SDLK_V}},                     q{0x0000_0076U}},
		{{q{w},                     q{SDLK_W}},                     q{0x0000_0077U}},
		{{q{x},                     q{SDLK_X}},                     q{0x0000_0078U}},
		{{q{y},                     q{SDLK_Y}},                     q{0x0000_0079U}},
		{{q{z},                     q{SDLK_Z}},                     q{0x0000_007AU}},
		{{q{leftBrace},             q{SDLK_LEFTBRACE}},             q{0x0000_007BU}},
		{{q{pipe},                  q{SDLK_PIPE}},                  q{0x0000_007CU}},
		{{q{rightBrace},            q{SDLK_RIGHTBRACE}},            q{0x0000_007DU}},
		{{q{tilde},                 q{SDLK_TILDE}},                 q{0x0000_007EU}},
		{{q{delete_},               q{SDLK_DELETE}},                q{0x0000_007FU}},
		{{q{plusMinus},             q{SDLK_PLUSMINUS}},             q{0x0000_00B1U}},
		{{q{capsLock},              q{SDLK_CAPSLOCK}},              q{0x4000_0039U}},
		{{q{f1},                    q{SDLK_F1}},                    q{0x4000_003AU}},
		{{q{f2},                    q{SDLK_F2}},                    q{0x4000_003BU}},
		{{q{f3},                    q{SDLK_F3}},                    q{0x4000_003CU}},
		{{q{f4},                    q{SDLK_F4}},                    q{0x4000_003DU}},
		{{q{f5},                    q{SDLK_F5}},                    q{0x4000_003EU}},
		{{q{f6},                    q{SDLK_F6}},                    q{0x4000_003FU}},
		{{q{f7},                    q{SDLK_F7}},                    q{0x4000_0040U}},
		{{q{f8},                    q{SDLK_F8}},                    q{0x4000_0041U}},
		{{q{f9},                    q{SDLK_F9}},                    q{0x4000_0042U}},
		{{q{f10},                   q{SDLK_F10}},                   q{0x4000_0043U}},
		{{q{f11},                   q{SDLK_F11}},                   q{0x4000_0044U}},
		{{q{f12},                   q{SDLK_F12}},                   q{0x4000_0045U}},
		{{q{printScreen},           q{SDLK_PRINTSCREEN}},           q{0x4000_0046U}},
		{{q{scrollLock},            q{SDLK_SCROLLLOCK}},            q{0x4000_0047U}},
		{{q{pause},                 q{SDLK_PAUSE}},                 q{0x4000_0048U}},
		{{q{insert},                q{SDLK_INSERT}},                q{0x4000_0049U}},
		{{q{home},                  q{SDLK_HOME}},                  q{0x4000_004AU}},
		{{q{pageUp},                q{SDLK_PAGEUP}},                q{0x4000_004BU}},
		{{q{end},                   q{SDLK_END}},                   q{0x4000_004DU}},
		{{q{pageDown},              q{SDLK_PAGEDOWN}},              q{0x4000_004EU}},
		{{q{right},                 q{SDLK_RIGHT}},                 q{0x4000_004FU}},
		{{q{left},                  q{SDLK_LEFT}},                  q{0x4000_0050U}},
		{{q{down},                  q{SDLK_DOWN}},                  q{0x4000_0051U}},
		{{q{up},                    q{SDLK_UP}},                    q{0x4000_0052U}},
		{{q{numLockClear},          q{SDLK_NUMLOCKCLEAR}},          q{0x4000_0053U}},
		{{q{kpDivide},              q{SDLK_KP_DIVIDE}},             q{0x4000_0054U}},
		{{q{kpMultiply},            q{SDLK_KP_MULTIPLY}},           q{0x4000_0055U}},
		{{q{kpMinus},               q{SDLK_KP_MINUS}},              q{0x4000_0056U}},
		{{q{kpPlus},                q{SDLK_KP_PLUS}},               q{0x4000_0057U}},
		{{q{kpEnter},               q{SDLK_KP_ENTER}},              q{0x4000_0058U}},
		{{q{kp1},                   q{SDLK_KP_1}},                  q{0x4000_0059U}},
		{{q{kp2},                   q{SDLK_KP_2}},                  q{0x4000_005AU}},
		{{q{kp3},                   q{SDLK_KP_3}},                  q{0x4000_005BU}},
		{{q{kp4},                   q{SDLK_KP_4}},                  q{0x4000_005CU}},
		{{q{kp5},                   q{SDLK_KP_5}},                  q{0x4000_005DU}},
		{{q{kp6},                   q{SDLK_KP_6}},                  q{0x4000_005EU}},
		{{q{kp7},                   q{SDLK_KP_7}},                  q{0x4000_005FU}},
		{{q{kp8},                   q{SDLK_KP_8}},                  q{0x4000_0060U}},
		{{q{kp9},                   q{SDLK_KP_9}},                  q{0x4000_0061U}},
		{{q{kp0},                   q{SDLK_KP_0}},                  q{0x4000_0062U}},
		{{q{kpPeriod},              q{SDLK_KP_PERIOD}},             q{0x4000_0063U}},
		{{q{application},           q{SDLK_APPLICATION}},           q{0x4000_0065U}},
		{{q{power},                 q{SDLK_POWER}},                 q{0x4000_0066U}},
		{{q{kpEquals},              q{SDLK_KP_EQUALS}},             q{0x4000_0067U}},
		{{q{f13},                   q{SDLK_F13}},                   q{0x4000_0068U}},
		{{q{f14},                   q{SDLK_F14}},                   q{0x4000_0069U}},
		{{q{f15},                   q{SDLK_F15}},                   q{0x4000_006AU}},
		{{q{f16},                   q{SDLK_F16}},                   q{0x4000_006BU}},
		{{q{f17},                   q{SDLK_F17}},                   q{0x4000_006CU}},
		{{q{f18},                   q{SDLK_F18}},                   q{0x4000_006DU}},
		{{q{f19},                   q{SDLK_F19}},                   q{0x4000_006EU}},
		{{q{f20},                   q{SDLK_F20}},                   q{0x4000_006FU}},
		{{q{f21},                   q{SDLK_F21}},                   q{0x4000_0070U}},
		{{q{f22},                   q{SDLK_F22}},                   q{0x4000_0071U}},
		{{q{f23},                   q{SDLK_F23}},                   q{0x4000_0072U}},
		{{q{f24},                   q{SDLK_F24}},                   q{0x4000_0073U}},
		{{q{execute},               q{SDLK_EXECUTE}},               q{0x4000_0074U}},
		{{q{help},                  q{SDLK_HELP}},                  q{0x4000_0075U}},
		{{q{menu},                  q{SDLK_MENU}},                  q{0x4000_0076U}},
		{{q{select},                q{SDLK_SELECT}},                q{0x4000_0077U}},
		{{q{stop},                  q{SDLK_STOP}},                  q{0x4000_0078U}},
		{{q{again},                 q{SDLK_AGAIN}},                 q{0x4000_0079U}},
		{{q{undo},                  q{SDLK_UNDO}},                  q{0x4000_007AU}},
		{{q{cut},                   q{SDLK_CUT}},                   q{0x4000_007BU}},
		{{q{copy},                  q{SDLK_COPY}},                  q{0x4000_007CU}},
		{{q{paste},                 q{SDLK_PASTE}},                 q{0x4000_007DU}},
		{{q{find},                  q{SDLK_FIND}},                  q{0x4000_007EU}},
		{{q{mute},                  q{SDLK_MUTE}},                  q{0x4000_007FU}},
		{{q{volumeUp},              q{SDLK_VOLUMEUP}},              q{0x4000_0080U}},
		{{q{volumeDown},            q{SDLK_VOLUMEDOWN}},            q{0x4000_0081U}},
		{{q{kpComma},               q{SDLK_KP_COMMA}},              q{0x4000_0085U}},
		{{q{kpEqualsAS400},         q{SDLK_KP_EQUALSAS400}},        q{0x4000_0086U}},
		{{q{altErase},              q{SDLK_ALTERASE}},              q{0x4000_0099U}},
		{{q{sysReq},                q{SDLK_SYSREQ}},                q{0x4000_009AU}},
		{{q{cancel},                q{SDLK_CANCEL}},                q{0x4000_009BU}},
		{{q{clear},                 q{SDLK_CLEAR}},                 q{0x4000_009CU}},
		{{q{prior},                 q{SDLK_PRIOR}},                 q{0x4000_009DU}},
		{{q{return2},               q{SDLK_RETURN2}},               q{0x4000_009EU}},
		{{q{separator},             q{SDLK_SEPARATOR}},             q{0x4000_009FU}},
		{{q{out_},                  q{SDLK_OUT}},                   q{0x4000_00A0U}},
		{{q{oper},                  q{SDLK_OPER}},                  q{0x4000_00A1U}},
		{{q{clearAgain},            q{SDLK_CLEARAGAIN}},            q{0x4000_00A2U}},
		{{q{crSel},                 q{SDLK_CRSEL}},                 q{0x4000_00A3U}},
		{{q{exSel},                 q{SDLK_EXSEL}},                 q{0x4000_00A4U}},
		{{q{kp00},                  q{SDLK_KP_00}},                 q{0x4000_00B0U}},
		{{q{kp000},                 q{SDLK_KP_000}},                q{0x4000_00B1U}},
		{{q{thousandsSeparator},    q{SDLK_THOUSANDSSEPARATOR}},    q{0x4000_00B2U}},
		{{q{decimalSeparator},      q{SDLK_DECIMALSEPARATOR}},      q{0x4000_00B3U}},
		{{q{currencyUnit},          q{SDLK_CURRENCYUNIT}},          q{0x4000_00B4U}},
		{{q{currencySubUnit},       q{SDLK_CURRENCYSUBUNIT}},       q{0x4000_00B5U}},
		{{q{kpLeftParen},           q{SDLK_KP_LEFTPAREN}},          q{0x4000_00B6U}},
		{{q{kpRightParen},          q{SDLK_KP_RIGHTPAREN}},         q{0x4000_00B7U}},
		{{q{kpLeftBrace},           q{SDLK_KP_LEFTBRACE}},          q{0x4000_00B8U}},
		{{q{kpRightBrace},          q{SDLK_KP_RIGHTBRACE}},         q{0x4000_00B9U}},
		{{q{kpTab},                 q{SDLK_KP_TAB}},                q{0x4000_00BAU}},
		{{q{kpBackspace},           q{SDLK_KP_BACKSPACE}},          q{0x4000_00BBU}},
		{{q{kpA},                   q{SDLK_KP_A}},                  q{0x4000_00BCU}},
		{{q{kpB},                   q{SDLK_KP_B}},                  q{0x4000_00BDU}},
		{{q{kpC},                   q{SDLK_KP_C}},                  q{0x4000_00BEU}},
		{{q{kpD},                   q{SDLK_KP_D}},                  q{0x4000_00BFU}},
		{{q{kpE},                   q{SDLK_KP_E}},                  q{0x4000_00C0U}},
		{{q{kpF},                   q{SDLK_KP_F}},                  q{0x4000_00C1U}},
		{{q{kpXOR},                 q{SDLK_KP_XOR}},                q{0x4000_00C2U}},
		{{q{kpPower},               q{SDLK_KP_POWER}},              q{0x4000_00C3U}},
		{{q{kpPercent},             q{SDLK_KP_PERCENT}},            q{0x4000_00C4U}},
		{{q{kpLess},                q{SDLK_KP_LESS}},               q{0x4000_00C5U}},
		{{q{kpGreater},             q{SDLK_KP_GREATER}},            q{0x4000_00C6U}},
		{{q{kpAmpersand},           q{SDLK_KP_AMPERSAND}},          q{0x4000_00C7U}},
		{{q{kpDblAmpersand},        q{SDLK_KP_DBLAMPERSAND}},       q{0x4000_00C8U}},
		{{q{kpVerticalBar},         q{SDLK_KP_VERTICALBAR}},        q{0x4000_00C9U}},
		{{q{kpDblVerticalBar},      q{SDLK_KP_DBLVERTICALBAR}},     q{0x4000_00CAU}},
		{{q{kpColon},               q{SDLK_KP_COLON}},              q{0x4000_00CBU}},
		{{q{kpHash},                q{SDLK_KP_HASH}},               q{0x4000_00CCU}},
		{{q{kpSpace},               q{SDLK_KP_SPACE}},              q{0x4000_00CDU}},
		{{q{kpAt},                  q{SDLK_KP_AT}},                 q{0x4000_00CEU}},
		{{q{kpExclaim},             q{SDLK_KP_EXCLAIM}},            q{0x4000_00CFU}, aliases: [{q{kpExclam}, q{SDLK_KP_EXCLAM}}]},
		{{q{kpMemStore},            q{SDLK_KP_MEMSTORE}},           q{0x4000_00D0U}},
		{{q{kpMemRecall},           q{SDLK_KP_MEMRECALL}},          q{0x4000_00D1U}},
		{{q{kpMemClear},            q{SDLK_KP_MEMCLEAR}},           q{0x4000_00D2U}},
		{{q{kpMemAdd},              q{SDLK_KP_MEMADD}},             q{0x4000_00D3U}},
		{{q{kpMemSubtract},         q{SDLK_KP_MEMSUBTRACT}},        q{0x4000_00D4U}},
		{{q{kpMemMultiply},         q{SDLK_KP_MEMMULTIPLY}},        q{0x4000_00D5U}},
		{{q{kpMemDivide},           q{SDLK_KP_MEMDIVIDE}},          q{0x4000_00D6U}},
		{{q{kpPlusMinus},           q{SDLK_KP_PLUSMINUS}},          q{0x4000_00D7U}},
		{{q{kpClear},               q{SDLK_KP_CLEAR}},              q{0x4000_00D8U}},
		{{q{kpClearEntry},          q{SDLK_KP_CLEARENTRY}},         q{0x4000_00D9U}},
		{{q{kpBinary},              q{SDLK_KP_BINARY}},             q{0x4000_00DAU}},
		{{q{kpOctal},               q{SDLK_KP_OCTAL}},              q{0x4000_00DBU}},
		{{q{kpDecimal},             q{SDLK_KP_DECIMAL}},            q{0x4000_00DCU}},
		{{q{kpHexadecimal},         q{SDLK_KP_HEXADECIMAL}},        q{0x4000_00DDU}},
		{{q{lCtrl},                 q{SDLK_LCTRL}},                 q{0x4000_00E0U}},
		{{q{lShift},                q{SDLK_LSHIFT}},                q{0x4000_00E1U}},
		{{q{lAlt},                  q{SDLK_LALT}},                  q{0x4000_00E2U}},
		{{q{lGui},                  q{SDLK_LGUI}},                  q{0x4000_00E3U}},
		{{q{rCtrl},                 q{SDLK_RCTRL}},                 q{0x4000_00E4U}},
		{{q{rShift},                q{SDLK_RSHIFT}},                q{0x4000_00E5U}},
		{{q{rAlt},                  q{SDLK_RALT}},                  q{0x4000_00E6U}},
		{{q{rGui},                  q{SDLK_RGUI}},                  q{0x4000_00E7U}},
		{{q{mode},                  q{SDLK_MODE}},                  q{0x4000_0101U}},
		{{q{sleep},                 q{SDLK_SLEEP}},                 q{0x4000_0102U}},
		{{q{wake},                  q{SDLK_WAKE}},                  q{0x4000_0103U}},
		{{q{channelIncrement},      q{SDLK_CHANNEL_INCREMENT}},     q{0x4000_0104U}},
		{{q{channelDecrement},      q{SDLK_CHANNEL_DECREMENT}},     q{0x4000_0105U}},
		{{q{mediaPlay},             q{SDLK_MEDIA_PLAY}},            q{0x4000_0106U}},
		{{q{mediaPause},            q{SDLK_MEDIA_PAUSE}},           q{0x4000_0107U}},
		{{q{mediaRecord},           q{SDLK_MEDIA_RECORD}},          q{0x4000_0108U}},
		{{q{mediaFastForward},      q{SDLK_MEDIA_FAST_FORWARD}},    q{0x4000_0109U}},
		{{q{mediaRewind},           q{SDLK_MEDIA_REWIND}},          q{0x4000_010AU}},
		{{q{mediaNextTrack},        q{SDLK_MEDIA_NEXT_TRACK}},      q{0x4000_010BU}},
		{{q{mediaPreviousTrack},    q{SDLK_MEDIA_PREVIOUS_TRACK}},  q{0x4000_010CU}},
		{{q{mediaStop},             q{SDLK_MEDIA_STOP}},            q{0x4000_010DU}},
		{{q{mediaEject},            q{SDLK_MEDIA_EJECT}},           q{0x4000_010EU}},
		{{q{mediaPlayPause},        q{SDLK_MEDIA_PLAY_PAUSE}},      q{0x4000_010FU}},
		{{q{mediaSelect},           q{SDLK_MEDIA_SELECT}},          q{0x4000_0110U}},
		{{q{acNew},                 q{SDLK_AC_NEW}},                q{0x4000_0111U}},
		{{q{acOpen},                q{SDLK_AC_OPEN}},               q{0x4000_0112U}},
		{{q{acClose},               q{SDLK_AC_CLOSE}},              q{0x4000_0113U}},
		{{q{acExit},                q{SDLK_AC_EXIT}},               q{0x4000_0114U}},
		{{q{acSave},                q{SDLK_AC_SAVE}},               q{0x4000_0115U}},
		{{q{acPrint},               q{SDLK_AC_PRINT}},              q{0x4000_0116U}},
		{{q{acProperties},          q{SDLK_AC_PROPERTIES}},         q{0x4000_0117U}},
		{{q{acSearch},              q{SDLK_AC_SEARCH}},             q{0x4000_0118U}},
		{{q{acHome},                q{SDLK_AC_HOME}},               q{0x4000_0119U}},
		{{q{acBack},                q{SDLK_AC_BACK}},               q{0x4000_011AU}},
		{{q{acForward},             q{SDLK_AC_FORWARD}},            q{0x4000_011BU}},
		{{q{acStop},                q{SDLK_AC_STOP}},               q{0x4000_011CU}},
		{{q{acRefresh},             q{SDLK_AC_REFRESH}},            q{0x4000_011DU}},
		{{q{acBookmarks},           q{SDLK_AC_BOOKMARKS}},          q{0x4000_011EU}},
		{{q{softLeft},              q{SDLK_SOFTLEFT}},              q{0x4000_011FU}},
		{{q{softRight},             q{SDLK_SOFTRIGHT}},             q{0x4000_0120U}},
		{{q{call},                  q{SDLK_CALL}},                  q{0x4000_0121U}},
		{{q{endCall},               q{SDLK_ENDCALL}},               q{0x4000_0122U}},
		{{q{leftTab},               q{SDLK_LEFT_TAB}},              q{0x2000_0001U}},
		{{q{level5Shift},           q{SDLK_LEVEL5_SHIFT}},          q{0x2000_0002U}},
		{{q{multiKeyCompose},       q{SDLK_MULTI_KEY_COMPOSE}},     q{0x2000_0003U}},
		{{q{lMeta},                 q{SDLK_LMETA}},                 q{0x2000_0004U}},
		{{q{rMeta},                 q{SDLK_RMETA}},                 q{0x2000_0005U}},
		{{q{lHyper},                q{SDLK_LHYPER}},                q{0x2000_0006U}},
		{{q{rHyper},                q{SDLK_RHYPER}},                q{0x2000_0007U}},
	];
	return ret;
}()));
alias SDL_Keycode_ = SDL_KeyCode_;

pragma(inline,true)
SDL_KeyCode SDL_SCANCODE_TO_KEYCODE(SDL_Scancode x) nothrow @nogc pure @safe =>
	cast(SDL_KeyCode)(x | SDLK_ScancodeMask);

alias SDL_KeyMod_ = ushort;
mixin(makeEnumBind(q{SDL_KeyMod}, q{SDL_KeyMod_}, aliases: [q{SDL_KMod}, q{SDL_Keymod}], members: (){
	EnumMember[] ret = [
		{{q{none},    q{SDL_KMOD_NONE}},    q{0x0000U}},
		{{q{lShift},  q{SDL_KMOD_LSHIFT}},  q{0x0001U}},
		{{q{rShift},  q{SDL_KMOD_RSHIFT}},  q{0x0002U}},
		{{q{level5},  q{SDL_KMOD_LEVEL5}},  q{0x0004U}},
		{{q{lCtrl},   q{SDL_KMOD_LCTRL}},   q{0x0040U}},
		{{q{rCtrl},   q{SDL_KMOD_RCTRL}},   q{0x0080U}},
		{{q{lAlt},    q{SDL_KMOD_LALT}},    q{0x0100U}},
		{{q{rAlt},    q{SDL_KMOD_RALT}},    q{0x0200U}},
		{{q{lGui},    q{SDL_KMOD_LGUI}},    q{0x0400U}},
		{{q{rGui},    q{SDL_KMOD_RGUI}},    q{0x0800U}},
		{{q{num},     q{SDL_KMOD_NUM}},     q{0x1000U}},
		{{q{caps},    q{SDL_KMOD_CAPS}},    q{0x2000U}},
		{{q{mode},    q{SDL_KMOD_MODE}},    q{0x4000U}},
		{{q{scroll},  q{SDL_KMOD_SCROLL}},  q{0x8000U}},
		{{q{ctrl},    q{SDL_KMOD_CTRL}},    q{lCtrl  | rCtrl}},
		{{q{shift},   q{SDL_KMOD_SHIFT}},   q{lShift | rShift}},
		{{q{alt},     q{SDL_KMOD_ALT}},     q{lAlt   | rAlt}},
		{{q{gui},     q{SDL_KMOD_GUI}},     q{lGui   | rGui}},
	];
	return ret;
}()));
alias SDL_Keymod_ = SDL_KeyMod_;

mixin(joinFnBinds((){
	FnBind[] ret = [
	];
	return ret;
}()));
